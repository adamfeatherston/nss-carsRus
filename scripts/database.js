//constains database of objects with arrays
//contatins *get functions for exporting database and creating a new order generated by the user.

const database = {
    paints: [
        {id: 1, color: "Silver", price: 1500},
        {id: 2, color: "Midnight Blue", price: 1500},
        {id: 3, color: "Firebrick Red", price: 1600},
        {id: 4, color: "Spring Green", price: 1400} 
    ],
    interiors: [
        {id: 1, type: "Beige Fabric", price: 1400},
        {id: 2, type: "Charcoal Fabric", price: 1500},
        {id: 3, type: "White Leather", price: 1600},
        {id: 4, type: "Black Leather", price: 1700}
    ],
    technologies: [
        {id: 1, package: "Basic Package", price: 2000},
        {id: 2, package: "Navigation Package", price: 3000},
        {id: 3, package: "Visibility Package", price: 4000},
        {id: 4, package: "Ultra Package", price: 5000}
    ],
    wheels: [
        {id: 1, size: "17-inch Pair Radial", price: 800}, 
        {id: 2, size: "17-inch Pair Radial Black", price: 850},
        {id: 3, size: "18-inch Pair Radial Silver", price: 950}, 
        {id: 4, size: "18-inch Pair Radial Black", price: 1000}
    ], 
    customOrders: [
        {id: 1,
        paintId: 1,
        interiorId: 2,
        technologyId: 3,
        wheelId: 3
    }
    ],
    orderBuilder: {},
}

export const getPaints = () => {
    return database.paints.map(paint => ({...paint}))
}
export const getInteriors = () => {
    return database.interiors.map(interior => ({...interior}))
}
export const getTechnologies = () => {
    return database.technologies.map(technology => ({...technology}))
}
export const getWheels = () => {
    return database.wheels.map(wheel => ({...wheel}))
}
export const getCustomOrders = () => {
    return database.customOrders.map(order => ({...order}))
}

export const setPaint = (id) => {
    database.orderBuilder.paintId = id
}

export const setInterior = (id) => {
    database.orderBuilder.interiorId = id
}

export const setTechnology = (id) => {
    database.orderBuilder.technologyId = id
}
export const setWheel = (id) => {
    database.orderBuilder.wheelId = id
}

export const addCustomOrder = () => {
    // Copy the current state of user choices
    const newOrder = {...database.orderBuilder}

    // Add a new primary key to the object
    const lastIndex = database.customOrders.length - 1
    newOrder.id = database.customOrders[lastIndex].id + 1

    // Add the new order object to custom orders state
    database.customOrders.push(newOrder)

    // Reset the temporary state for user choices
    database.orderBuilder = {}

    // Broadcast a notification that permanent state has changed
    document.dispatchEvent(new CustomEvent("stateChanged"))
}